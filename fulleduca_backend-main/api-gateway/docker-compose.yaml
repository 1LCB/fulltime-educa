version: '3'

networks:
  kong-net:
    driver: bridge
    external: true

services:
  kong-database:
    image: postgres:alpine
    networks:
      - kong-net
    container_name: kong-database
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", kong ]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration-bootstrap:
    image: kong:alpine
    networks:
      - kong-net
    container_name: kong-bootstrap
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations bootstrap
    restart: on-failure

  kong-migration-up:
    image: kong:alpine
    networks:
      - kong-net
    container_name: kong-migration-up
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations up
    restart: on-failure

  kong-api-gateway:
    image: kong:alpine
    networks:
      - kong-net
    container_name: kong-api-gateway
    depends_on:
      - kong-migration-up
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_PROXY_ADMIN_API_PORT=8001
      - KONG_PROXY_ADMIN_SSL_API_PORT=8444
    ports:
      - "8000:8000"
    restart: on-failure

  konga:
    image: pantsel/konga
    networks:
      - kong-net
    restart: on-failure
    container_name: konga
    depends_on:
      - kong-database
    environment:
      - NODE_ENV=development
    ports:
      - "1337:1337"
